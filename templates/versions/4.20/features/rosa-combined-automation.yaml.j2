apiVersion: cluster.open-cluster-management.io/v1
kind: ManagedCluster
metadata:
  name: {{ cluster_name }}
  namespace: {{ capi_namespace }}
  labels:
    automation.acm.redhat.com/test-case: "ACM-21174-Combined"
    automation.acm.redhat.com/network-automation: "true"
    automation.acm.redhat.com/role-automation: "true"
spec:
  hubAcceptsClient: true
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: {{ cluster_name }}
  namespace: {{ capi_namespace }}
  labels:
    automation.acm.redhat.com/test-case: "ACM-21174-Combined"
    automation.acm.redhat.com/network-automation: "true"
    automation.acm.redhat.com/role-automation: "true"
spec:
  clusterNetwork:
    pods:
      cidrBlocks: ["{{ cluster_network.pod_cidr | default('192.168.0.0/16') }}"]
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
    kind: ROSACluster
    name: {{ cluster_name }}
    namespace: {{ capi_namespace }}
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta2
    kind: ROSAControlPlane
    name: {{ cluster_name }}
    namespace: {{ capi_namespace }}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: ROSACluster
metadata:
  name: {{ cluster_name }}
  namespace: {{ capi_namespace }}
  labels:
    automation.acm.redhat.com/test-case: "ACM-21174-Combined"
    automation.acm.redhat.com/network-automation: "true"
    automation.acm.redhat.com/role-automation: "true"
spec: {}
---
# ROSANetwork for automated VPC and subnet creation
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: ROSANetwork
metadata:
  name: {{ cluster_name }}-network
  namespace: {{ capi_namespace }}
  labels:
    cluster.x-k8s.io/cluster-name: {{ cluster_name }}
    automation.acm.redhat.com/test-case: "ACM-21174-Combined"
    automation.acm.redhat.com/created-by: "ansible-automation"
spec:
  identityRef:
    kind: AWSClusterControllerIdentity
    name: {{ rosa_network_config.identity_name | default('default') }}
  credentialsSecretRef:
    name: {{ rosa_creds_secret }}
  availabilityZones:
    {% for az in rosa_network_config.availability_zones %}
    - {{ az }}
    {% endfor %}
  cidrBlock: {{ rosa_network_config.cidr_block | default('10.0.0.0/16') }}
  tags:
    Environment: {{ environment_tag | default('test') }}
    TestCase: "ACM-21174-Combined"
    CreatedBy: "ansible-automation"
    Purpose: "combined-automation-testing"
---
# ROSARoleConfig for automated AWS IAM role creation (if 4.20 templates available)
{% if rosa_role_config is defined and rosa_role_config.enabled | default(false) %}
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: ROSARoleConfig
metadata:
  name: {{ cluster_name }}-roles
  namespace: {{ capi_namespace }}
  labels:
    cluster.x-k8s.io/cluster-name: {{ cluster_name }}
    automation.acm.redhat.com/test-case: "ACM-21174-Combined"
    automation.acm.redhat.com/created-by: "ansible-automation"
spec:
  identityRef:
    kind: AWSClusterControllerIdentity
    name: {{ rosa_role_config.identity_name | default('default') }}
  credentialsSecretRef:
    name: {{ rosa_creds_secret }}
  accountRoleConfig:
    prefix: {{ rosa_role_config.prefix | default(cluster_name_prefix) }}
    version: {{ rosa_role_config.version | default(openshift_version) }}
  operatorRoleConfig:
    prefix: {{ rosa_role_config.prefix | default(cluster_name_prefix) }}
{% endif %}
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta2
kind: ROSAControlPlane
metadata:
  name: {{ cluster_name }}
  namespace: {{ capi_namespace }}
  labels:
    automation.acm.redhat.com/test-case: "ACM-21174-Combined"
    automation.acm.redhat.com/network-automation: "true"
    automation.acm.redhat.com/role-automation: "true"
spec:
  # Network automation reference
  rosaNetworkRef:
    name: {{ cluster_name }}-network
    namespace: {{ capi_namespace }}

  # Role automation reference (if enabled)
  {% if rosa_role_config is defined and rosa_role_config.enabled | default(false) %}
  rosaRoleConfigRef:
    name: {{ cluster_name }}-roles
    namespace: {{ capi_namespace }}
  {% endif %}

  rosaClusterName: {{ cluster_name }}
  domainPrefix: {{ domain_prefix | default('rosa-' + cluster_name_prefix) }}
  version: {{ openshift_version }}
  region: {{ aws_region }}
  channelGroup: {{ channel_group | default('stable') }}

  defaultMachinePoolSpec:
    instanceType: {{ machine_pool.instance_type | default('m5.xlarge') }}
    autoscaling:
      maxReplicas: {{ machine_pool.max_replicas | default(3) }}
      minReplicas: {{ machine_pool.min_replicas | default(2) }}

  additionalTags:
    env: {{ environment_tag | default('test') }}
    purpose: {{ purpose_tag | default('acm21174-combined-testing') }}
    automated: "true"
    network-automation: "true"
    role-automation: "{{ 'true' if rosa_role_config is defined and rosa_role_config.enabled | default(false) else 'false' }}"

  network:
    machineCIDR: {{ cluster_network.machine_cidr | default('10.0.0.0/16') }}
    podCIDR: {{ cluster_network.pod_cidr | default('10.128.0.0/14') }}
    serviceCIDR: {{ cluster_network.service_cidr | default('172.30.0.0/16') }}

  # Complete automation: No manual subnets, availability zones, or role ARNs required
  # All infrastructure will be created automatically by ROSANetwork and ROSARoleConfig
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachinePool
metadata:
  name: {{ cluster_name }}
  namespace: {{ capi_namespace }}
  labels:
    automation.acm.redhat.com/test-case: "ACM-21174-Combined"
    automation.acm.redhat.com/network-automation: "true"
    automation.acm.redhat.com/role-automation: "true"
spec:
  clusterName: {{ cluster_name }}
  replicas: {{ machine_pool.replicas | default(2) }}
  template:
    spec:
      clusterName: {{ cluster_name }}
      bootstrap:
        dataSecretName: ""
      infrastructureRef:
        name: {{ cluster_name }}
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
        kind: ROSAMachinePool
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: ROSAMachinePool
metadata:
  name: {{ cluster_name }}
  namespace: {{ capi_namespace }}
  labels:
    automation.acm.redhat.com/test-case: "ACM-21174-Combined"
    automation.acm.redhat.com/network-automation: "true"
    automation.acm.redhat.com/role-automation: "true"
spec:
  nodePoolName: {{ machine_pool.node_pool_name | default(cluster_name + '-nodepool') }}
  instanceType: {{ machine_pool.instance_type | default('m5.xlarge') }}
  version: {{ openshift_version }}
  # Note: subnet assignment will be automatic via ROSANetwork