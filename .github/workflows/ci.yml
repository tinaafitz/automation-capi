name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('ui/backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          cd ui/backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run backend tests
        run: |
          cd ui/backend
          pytest --cov=. --cov-report=xml --cov-report=term

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./ui/backend/coverage.xml
          flags: backend
          name: backend-coverage

  backend-lint:
    name: Backend Linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          cd ui/backend
          python -m pip install --upgrade pip
          pip install black pylint mypy

      - name: Check code formatting with Black
        run: |
          cd ui/backend
          black --check .

      - name: Lint with Pylint
        run: |
          cd ui/backend
          pylint *.py --fail-under=8.0 || true

      - name: Type check with mypy
        run: |
          cd ui/backend
          mypy . --ignore-missing-imports || true

  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ui/frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('ui/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          cd ui/frontend
          npm ci

      - name: Run frontend tests
        run: |
          cd ui/frontend
          npm test -- --coverage --watchAll=false

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./ui/frontend/coverage/lcov.info
          flags: frontend
          name: frontend-coverage

  frontend-lint:
    name: Frontend Linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd ui/frontend
          npm ci

      - name: Lint with ESLint
        run: |
          cd ui/frontend
          npm run lint

      - name: Check formatting with Prettier
        run: |
          cd ui/frontend
          npm run format:check

  frontend-build:
    name: Frontend Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd ui/frontend
          npm ci

      - name: Build frontend
        run: |
          cd ui/frontend
          npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: ui/frontend/build/
          retention-days: 7

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD

  all-checks-passed:
    name: All Checks Passed
    runs-on: ubuntu-latest
    needs: [backend-test, backend-lint, frontend-test, frontend-lint, frontend-build, security-scan]

    steps:
      - name: All checks passed
        run: echo "All CI checks passed successfully!"
