#==== Common ====
output_dir: "{{ lookup('env', 'HOME') }}/output"
skip_ansible_runner: false
# ansible_async_dir: '/root/.ansible_async'
ansible_async_dir: '/tmp/.ansible_async'

#==== Multi-Provider Support ====
cloud_provider: "aws"                            # Default provider: aws, azure
supported_providers: ["aws", "azure"]
provider_config_path: "providers/{{ cloud_provider }}"

#==== Version Management ====
openshift_version: "4.19"                    # Default OpenShift version
supported_versions: ["4.18", "4.19", "4.20"]
template_version_path: "templates/versions/{{ openshift_version }}"
common_template_path: "templates/common"
schemas_path: "templates/schemas"
feature_matrix_file: "{{ schemas_path }}/feature-matrix.yml"
version_compatibility_file: "{{ schemas_path }}/version-compatibility.yml"

#==== OCP ====
api_url: ""
catalog_sources:
  production:
    app_registry:
      source: "redhat-operators"
    index_image:
      source: ""
  stage:
    app_registry:
      source: "redhat-operators"
    index_image:
      source: "brew.registry.redhat.io/rh-osbs/iib-pub-pending"
  acmd:
    app_registry:
      source: ""
    index_image:
      source: "quay.io:443/acm-d"
  brew:
    app_registry:
      source: ""
    index_image:
      source: "brew.registry.redhat.io/rh-osbs/iib"

#==== ACM/MCE ====
acm_repo: "production"
acm_release_version: ""
acm_sub_name: "advanced-cluster-management"
acm_namespace: "open-cluster-management"

capi_namespace: "ns-rosa-hcp"
capa_system_namespace: "multicluster-engine"
rosa_creds_secret: "rosa-creds-secret"


mce_sub_name: "multicluster-engine"
mce_namespace: "multicluster-engine"
mce_name: "multiclusterengine"
default_lc_name: "local-cluster"
infra_nodes: false
ingress_cert_secret: "custom-cert"
labeled_resources: []
unannotated_resources: []
acm_resources: ["deployment",
                "configmap",
                "service",
                "serviceaccount",
                "subscription",
                "policy",
                "ValidatingWebhookConfiguration",
                "MutatingWebhookConfiguration",
                "clusterrole",
                "clusterrolebinding",
                "role",
                "rolebinding"]

#==== Upgrade ====
upgraded_to_release_version: ""
eus_upgrade: false
mce_comps_to_be_removed:
mce_comps_to_be_added:
  - name: cluster-api
    status: false
  - name: cluster-api-provider-aws
    status: false
  - name: cluster-api-provider-azure
    status: false
mch_comps_to_be_removed: []
mch_comps_to_be_added:
  - name: multicluster-engine
    status: true

#==== ACM-21162 Testing ====
acm21162_config:
  enabled: true
  kind_cluster_name: "capa-roles-test"
  feature_flags:
    EXP_ROSA: "true"
    EXP_MACHINE_POOL: "true"
    CLUSTER_TOPOLOGY: "true"

rosa_role_config:
  enabled: true
  default_prefix: "{{ cluster_name_prefix | default('acm21162') }}"
  default_version: "4.20"
  creation_timeout: 1200  # 20 minutes
  propagation_delay: 30   # AWS role propagation delay

capa_controller_420:
  image: "quay.io/melserng/cluster-api-aws-controller-amd64:dev"
  tag: "4.20.0-rc.0"
  robin_crds_base_url: "https://raw.githubusercontent.com/kubernetes-sigs/cluster-api-provider-aws/main/config/crd/bases"

#==== Others ====
operators:
  oadp:
    src: 'redhat-operators'
    channel: ''
    iib_tag: ''


#==== STS ====
oadp_arn: 'arn:aws:iam::902449478968:role/rosa-classic-tn-openshift-oadp-aws-cloud-credentials'

env_var_name: "foo"
env_add_name: "bar"
env_override_name: "baz"

capa_pod_label: "infrastructure-aws"
capi_pod_label: "infrastructure-aws"

