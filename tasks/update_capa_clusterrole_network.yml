---
# Update CAPA ClusterRole permissions for ROSANetwork operations
- name: Update CAPA ClusterRole permissions for ROSANetwork
  block:
    - name: Get current CAPA manager ClusterRole
      kubernetes.core.k8s_info:
        api_version: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        name: capa-manager-role
      register: current_clusterrole

    - name: Display current ClusterRole rules
      debug:
        msg: "Current CAPA manager ClusterRole has {{ current_clusterrole.resources[0].rules | length }} rules"
      when: current_clusterrole.resources | length > 0

    - name: Backup current ClusterRole configuration
      copy:
        content: "{{ current_clusterrole.resources[0] | to_nice_yaml }}"
        dest: "{{ output_dir }}/capa-clusterrole-backup-{{ ansible_date_time.epoch }}.yaml"
        mode: '0644'
      when: current_clusterrole.resources | length > 0

    - name: Check if ROSANetwork permissions already exist
      set_fact:
        has_rosanetwork_permissions: >-
          {{
            current_clusterrole.resources[0].rules |
            selectattr('apiGroups', 'defined') |
            selectattr('apiGroups', 'contains', 'infrastructure.cluster.x-k8s.io') |
            selectattr('resources', 'defined') |
            selectattr('resources', 'contains', 'rosanetworks') |
            list | length > 0
          }}
      when: current_clusterrole.resources | length > 0

    - name: Display current ROSANetwork permissions status
      debug:
        msg: "ROSANetwork permissions already exist: {{ has_rosanetwork_permissions | default(false) }}"

    - name: Add ROSANetwork permissions to CAPA manager ClusterRole
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRole
          metadata:
            name: capa-manager-role
            annotations:
              automation.acm.redhat.com/updated-for: "ACM-21174-ROSANetwork"
              automation.acm.redhat.com/updated-timestamp: "{{ ansible_date_time.iso8601 }}"
          rules: >-
            {{
              current_clusterrole.resources[0].rules +
              [
                {
                  "apiGroups": ["infrastructure.cluster.x-k8s.io"],
                  "resources": ["rosanetworks"],
                  "verbs": ["create", "delete", "get", "list", "patch", "update", "watch"]
                },
                {
                  "apiGroups": ["infrastructure.cluster.x-k8s.io"],
                  "resources": ["rosanetworks/status"],
                  "verbs": ["get", "patch", "update"]
                },
                {
                  "apiGroups": ["infrastructure.cluster.x-k8s.io"],
                  "resources": ["rosanetworks/finalizers"],
                  "verbs": ["update"]
                },
                {
                  "apiGroups": [""],
                  "resources": ["events"],
                  "verbs": ["create", "patch"]
                }
              ]
            }}
      when:
        - current_clusterrole.resources | length > 0
        - not has_rosanetwork_permissions | default(false)
      register: clusterrole_update

    - name: Display ClusterRole update result
      debug:
        msg: "ROSANetwork permissions added to CAPA manager ClusterRole"
      when: clusterrole_update is changed

    - name: Display message if permissions already exist
      debug:
        msg: "ROSANetwork permissions already exist in CAPA manager ClusterRole"
      when: has_rosanetwork_permissions | default(false)

    - name: Verify updated ClusterRole
      kubernetes.core.k8s_info:
        api_version: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        name: capa-manager-role
      register: updated_clusterrole

    - name: Validate ROSANetwork permissions were added
      assert:
        that:
          - updated_clusterrole.resources | length > 0
          - >-
            updated_clusterrole.resources[0].rules |
            selectattr('apiGroups', 'defined') |
            selectattr('apiGroups', 'contains', 'infrastructure.cluster.x-k8s.io') |
            selectattr('resources', 'defined') |
            selectattr('resources', 'contains', 'rosanetworks') |
            list | length > 0
        fail_msg: "ROSANetwork permissions were not properly added to ClusterRole"
        success_msg: "ROSANetwork permissions successfully added to CAPA manager ClusterRole"

    - name: Check for additional required permissions
      set_fact:
        has_cloudformation_permissions: >-
          {{
            updated_clusterrole.resources[0].rules |
            selectattr('apiGroups', 'defined') |
            selectattr('apiGroups', 'contains', '') |
            selectattr('resources', 'defined') |
            selectattr('resources', 'contains', 'secrets') |
            list | length > 0
          }}

    - name: Add CloudFormation and AWS secret permissions if needed
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRole
          metadata:
            name: capa-manager-role
          rules: >-
            {{
              updated_clusterrole.resources[0].rules +
              [
                {
                  "apiGroups": [""],
                  "resources": ["secrets"],
                  "verbs": ["get", "list", "watch"]
                },
                {
                  "apiGroups": [""],
                  "resources": ["configmaps"],
                  "verbs": ["get", "list", "watch"]
                }
              ]
            }}
      when: not has_cloudformation_permissions
      register: additional_permissions_update

    - name: Restart CAPA controller to pick up new permissions
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: capa-controller-manager
            namespace: capa-system
          spec:
            template:
              metadata:
                annotations:
                  kubectl.kubernetes.io/restartedAt: "{{ ansible_date_time.iso8601 }}"
                  automation.acm.redhat.com/restart-reason: "ROSANetwork permissions update"
      register: controller_restart

    - name: Wait for CAPA controller to be ready after restart
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: capa-system
        label_selectors:
          - control-plane=capa-controller-manager
        wait: true
        wait_condition:
          type: Ready
          status: "True"
        wait_timeout: 300

    - name: Verify controller can access ROSANetwork resources
      block:
        - name: Test ROSANetwork API access
          kubernetes.core.k8s_info:
            api_version: infrastructure.cluster.x-k8s.io/v1beta2
            kind: ROSANetwork
            namespace: "{{ capi_namespace }}"
          register: rosanetwork_access
          ignore_errors: true

        - name: Display API access test result
          debug:
            msg: "CAPA controller can access ROSANetwork API: {{ 'Yes' if rosanetwork_access.failed == false else 'No' }}"

    - name: Set permissions update success fact
      set_fact:
        capa_network_permissions_updated: true

    - name: Display permissions update summary
      debug:
        msg:
          - "✓ CAPA ClusterRole ROSANetwork Permissions Update:"
          - "✓ ROSANetwork CRUD permissions added"
          - "✓ ROSANetwork status permissions added"
          - "✓ ROSANetwork finalizer permissions added"
          - "✓ Event creation permissions added"
          - "✓ Secret access permissions verified"
          - "✓ CAPA controller restarted with new permissions"

  rescue:
    - name: Handle ClusterRole update failure
      debug:
        msg: "Failed to update CAPA ClusterRole permissions: {{ ansible_failed_result.msg | default('Unknown error') }}"

    - name: Get current ClusterRole for debugging
      kubernetes.core.k8s_info:
        api_version: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        name: capa-manager-role
      register: debug_clusterrole
      ignore_errors: true

    - name: Display ClusterRole for debugging
      debug:
        var: debug_clusterrole.resources[0].rules
      when: debug_clusterrole.resources | length > 0

    - name: Attempt rollback to previous ClusterRole
      block:
        - name: Rollback to previous ClusterRole
          kubernetes.core.k8s:
            state: present
            src: "{{ output_dir }}/capa-clusterrole-backup-{{ ansible_date_time.epoch }}.yaml"
          when: current_clusterrole.resources | length > 0

        - name: Display rollback attempt
          debug:
            msg: "Attempted rollback to previous CAPA ClusterRole configuration"

      ignore_errors: true

    - name: Set permissions update failure fact
      set_fact:
        capa_network_permissions_updated: false

    - name: Provide troubleshooting guidance
      debug:
        msg:
          - "CAPA ClusterRole permissions update failed. Troubleshooting steps:"
          - "1. Check ClusterRole status:"
          - "   kubectl get clusterrole capa-manager-role"
          - "2. Verify ROSANetwork CRD exists:"
          - "   kubectl get crd rosanetworks.infrastructure.cluster.x-k8s.io"
          - "3. Check RBAC permissions:"
          - "   kubectl auth can-i create rosanetworks --as=system:serviceaccount:capa-system:capa-controller-manager"
          - "4. Review ClusterRole rules:"
          - "   kubectl describe clusterrole capa-manager-role"
          - "5. Check controller logs:"
          - "   kubectl logs deployment/capa-controller-manager -n capa-system"

    - name: Fail the task
      fail:
        msg: "CAPA ClusterRole permissions update failed"