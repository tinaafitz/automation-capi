---
- name: Update CAPA ClusterRole permissions for ROSARoleConfig
  block:
    - name: Get current CAPA manager ClusterRole
      kubernetes.core.k8s_info:
        api_version: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        name: capa-manager-role
      register: current_clusterrole

    - name: Display current ClusterRole rules
      debug:
        msg: "Current CAPA manager ClusterRole has {{ current_clusterrole.resources[0].rules | length }} rules"
      when: current_clusterrole.resources | length > 0

    - name: Check if ROSARoleConfig permissions already exist
      set_fact:
        has_rosaroleconfig_permissions: >-
          {{
            current_clusterrole.resources[0].rules |
            selectattr('apiGroups', 'defined') |
            selectattr('apiGroups', 'contains', 'infrastructure.cluster.x-k8s.io') |
            selectattr('resources', 'defined') |
            selectattr('resources', 'contains', 'rosaroleconfigs') |
            list | length > 0
          }}
      when: current_clusterrole.resources | length > 0

    - name: Add ROSARoleConfig permissions to CAPA manager ClusterRole
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRole
          metadata:
            name: capa-manager-role
          rules: >-
            {{
              current_clusterrole.resources[0].rules +
              [
                {
                  "apiGroups": ["infrastructure.cluster.x-k8s.io"],
                  "resources": ["rosaroleconfigs"],
                  "verbs": ["create", "delete", "get", "list", "patch", "update", "watch"]
                },
                {
                  "apiGroups": ["infrastructure.cluster.x-k8s.io"],
                  "resources": ["rosaroleconfigs/status"],
                  "verbs": ["get", "patch", "update"]
                },
                {
                  "apiGroups": ["infrastructure.cluster.x-k8s.io"],
                  "resources": ["rosaroleconfigs/finalizers"],
                  "verbs": ["update"]
                }
              ]
            }}
      when:
        - current_clusterrole.resources | length > 0
        - not has_rosaroleconfig_permissions
      register: clusterrole_update

    - name: Display ClusterRole update result
      debug:
        msg: "ROSARoleConfig permissions added to CAPA manager ClusterRole"
      when: clusterrole_update is changed

    - name: Display message if permissions already exist
      debug:
        msg: "ROSARoleConfig permissions already exist in CAPA manager ClusterRole"
      when: has_rosaroleconfig_permissions | default(false)

    - name: Verify updated ClusterRole
      kubernetes.core.k8s_info:
        api_version: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        name: capa-manager-role
      register: updated_clusterrole

    - name: Validate ROSARoleConfig permissions were added
      assert:
        that:
          - updated_clusterrole.resources | length > 0
          - >-
            updated_clusterrole.resources[0].rules |
            selectattr('apiGroups', 'defined') |
            selectattr('apiGroups', 'contains', 'infrastructure.cluster.x-k8s.io') |
            selectattr('resources', 'defined') |
            selectattr('resources', 'contains', 'rosaroleconfigs') |
            list | length > 0
        fail_msg: "ROSARoleConfig permissions were not properly added to ClusterRole"
        success_msg: "ROSARoleConfig permissions successfully added to CAPA manager ClusterRole"

    - name: Restart CAPA controller to pick up new permissions
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: capa-controller-manager
            namespace: capa-system
          spec:
            template:
              metadata:
                annotations:
                  kubectl.kubernetes.io/restartedAt: "{{ ansible_date_time.iso8601 }}"
      register: controller_restart

    - name: Wait for CAPA controller to be ready after restart
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: capa-system
        label_selectors:
          - control-plane=capa-controller-manager
        wait: true
        wait_condition:
          type: Ready
          status: "True"
        wait_timeout: 300

  rescue:
    - name: Handle ClusterRole update failure
      debug:
        msg: "Failed to update CAPA ClusterRole permissions: {{ ansible_failed_result.msg }}"

    - name: Get current ClusterRole for debugging
      kubernetes.core.k8s_info:
        api_version: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        name: capa-manager-role
      register: debug_clusterrole
      ignore_errors: true

    - name: Display ClusterRole for debugging
      debug:
        var: debug_clusterrole
      when: debug_clusterrole is defined

    - name: Fail the task
      fail:
        msg: "CAPA ClusterRole permissions update failed"