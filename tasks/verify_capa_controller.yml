---
- name: Verify CAPA controller is ready for ROSARoleConfig operations
  block:
    - name: Check CAPA controller deployment status
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        name: capa-controller-manager
        namespace: capa-system
      register: capa_deployment

    - name: Verify CAPA deployment is ready
      assert:
        that:
          - capa_deployment.resources | length > 0
          - capa_deployment.resources[0].status.readyReplicas is defined
          - capa_deployment.resources[0].status.readyReplicas > 0
          - capa_deployment.resources[0].status.readyReplicas == capa_deployment.resources[0].spec.replicas
        fail_msg: "CAPA controller deployment is not ready"
        success_msg: "CAPA controller deployment is ready"

    - name: Get CAPA controller pods
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: capa-system
        label_selectors:
          - control-plane=capa-controller-manager
      register: capa_pods

    - name: Verify CAPA controller pods are running
      assert:
        that:
          - capa_pods.resources | length > 0
          - capa_pods.resources | selectattr('status.phase', 'equalto', 'Running') | list | length > 0
        fail_msg: "No CAPA controller pods are running"
        success_msg: "CAPA controller pods are running"

    - name: Check CAPA controller image version
      debug:
        msg: "CAPA controller running image: {{ capa_deployment.resources[0].spec.template.spec.containers[0].image }}"

    - name: Verify correct 4.20 image is running
      assert:
        that:
          - capa_deployment.resources[0].spec.template.spec.containers[0].image == capa_420_image + ":" + capa_420_tag
        fail_msg: "CAPA controller is not running the expected 4.20 image"
        success_msg: "CAPA controller is running the correct 4.20 development image"

    - name: Check CAPA controller logs for startup issues
      command: kubectl logs -n capa-system deployment/capa-controller-manager --tail=20
      register: controller_logs

    - name: Display recent controller logs
      debug:
        msg: "Recent CAPA controller logs: {{ controller_logs.stdout_lines[-10:] }}"

    - name: Check for error messages in logs
      fail:
        msg: "CAPA controller logs contain error messages"
      when:
        - "'error' in controller_logs.stdout.lower() or 'failed' in controller_logs.stdout.lower()"
        - "'level=error' in controller_logs.stdout.lower()"

    - name: Verify CAPA manager ClusterRole has ROSARoleConfig permissions
      kubernetes.core.k8s_info:
        api_version: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        name: capa-manager-role
      register: manager_clusterrole

    - name: Check ROSARoleConfig permissions in ClusterRole
      set_fact:
        has_required_permissions: >-
          {{
            manager_clusterrole.resources[0].rules |
            selectattr('apiGroups', 'defined') |
            selectattr('apiGroups', 'contains', 'infrastructure.cluster.x-k8s.io') |
            selectattr('resources', 'defined') |
            selectattr('resources', 'contains', 'rosaroleconfigs') |
            list | length > 0
          }}

    - name: Verify ROSARoleConfig permissions are present
      assert:
        that: has_required_permissions
        fail_msg: "CAPA manager ClusterRole does not have ROSARoleConfig permissions"
        success_msg: "CAPA manager ClusterRole has required ROSARoleConfig permissions"

    - name: Test CAPA controller API access (optional)
      kubernetes.core.k8s_info:
        api_version: infrastructure.cluster.x-k8s.io/v1beta2
        kind: ROSARoleConfig
        namespace: "{{ capi_namespace }}"
      register: rosaroleconfig_access
      ignore_errors: true

    - name: Verify API access
      debug:
        msg: "CAPA controller can access ROSARoleConfig API: {{ 'Yes' if rosaroleconfig_access.failed == false else 'No' }}"

    - name: Final CAPA controller verification
      debug:
        msg:
          - "✓ CAPA controller deployment is ready"
          - "✓ CAPA controller pods are running"
          - "✓ Correct 4.20 development image is deployed"
          - "✓ ROSARoleConfig permissions are configured"
          - "✓ CAPA controller is ready for ACM-21162 testing"

  rescue:
    - name: Handle CAPA controller verification failure
      debug:
        msg: "CAPA controller verification failed: {{ ansible_failed_result.msg }}"

    - name: Get detailed CAPA controller information for debugging
      block:
        - name: Get CAPA deployment details
          command: kubectl describe deployment capa-controller-manager -n capa-system
          register: deployment_details
          ignore_errors: true

        - name: Get CAPA pod details
          command: kubectl describe pods -l control-plane=capa-controller-manager -n capa-system
          register: pod_details
          ignore_errors: true

        - name: Get CAPA controller logs
          command: kubectl logs -n capa-system deployment/capa-controller-manager --tail=50
          register: full_logs
          ignore_errors: true

        - name: Display debugging information
          debug:
            msg:
              - "Deployment details: {{ deployment_details.stdout }}"
              - "Pod details: {{ pod_details.stdout }}"
              - "Controller logs: {{ full_logs.stdout }}"
          when: deployment_details is defined

    - name: Fail the verification
      fail:
        msg: "CAPA controller verification failed - environment not ready for ACM-21162 testing"