---
# Wait for ROSANetwork to complete VPC and subnet creation
- name: "Wait for ROSANetwork to be ready for cluster {{ cluster_name }}"
  block:
    - name: Display wait configuration
      debug:
        msg:
          - "Waiting for ROSANetwork: {{ rosa_network_config_name | default(cluster_name + '-network') }}"
          - "Namespace: {{ capi_namespace }}"
          - "Timeout: {{ rosa_network_creation_timeout | default(900) }} seconds"

    - name: Wait for ROSANetwork to complete network creation
      kubernetes.core.k8s_info:
        api_version: infrastructure.cluster.x-k8s.io/v1beta2
        kind: ROSANetwork
        name: "{{ rosa_network_config_name | default(cluster_name + '-network') }}"
        namespace: "{{ capi_namespace }}"
        wait: true
        wait_condition:
          type: Ready
          status: "True"
        wait_timeout: "{{ rosa_network_creation_timeout | default(900) }}"
      register: network_ready

    - name: Extract network status information
      set_fact:
        network_status: "{{ network_ready.resources[0].status }}"
      when: network_ready.resources | length > 0

    - name: Display network creation progress
      debug:
        msg:
          - "ROSANetwork Status: {{ network_status.phase | default('Unknown') }}"
          - "Conditions: {{ network_status.conditions | default([]) | length }}"
          - "VPC Ready: {{ 'Yes' if network_status.vpcId is defined and network_status.vpcId != '' else 'No' }}"
          - "Subnets Ready: {{ 'Yes' if network_status.publicSubnets is defined and network_status.publicSubnets | length > 0 else 'No' }}"
          - "CloudFormation Stack: {{ network_status.stackName | default('Not available') }}"

    - name: Verify all network components are ready
      assert:
        that:
          - network_status.ready | default(false) == true
          - network_status.vpcId is defined
          - network_status.vpcId != ""
          - network_status.publicSubnets is defined
          - network_status.publicSubnets | length > 0
          - network_status.privateSubnets is defined
          - network_status.privateSubnets | length > 0
        fail_msg: "Not all network components are ready"
        success_msg: "All network components are ready"

    - name: Display detailed network resource information
      debug:
        msg:
          - "✓ ROSANetwork Ready Status:"
          - "VPC ID: {{ network_status.vpcId }}"
          - "Public Subnets:"
          - "{% for subnet in network_status.publicSubnets %}"
          - "  - {{ subnet.subnetId }} ({{ subnet.availabilityZone }}) - {{ subnet.cidrBlock }}"
          - "{% endfor %}"
          - "Private Subnets:"
          - "{% for subnet in network_status.privateSubnets %}"
          - "  - {{ subnet.subnetId }} ({{ subnet.availabilityZone }}) - {{ subnet.cidrBlock }}"
          - "{% endfor %}"

    - name: Wait additional time for AWS resource propagation
      pause:
        seconds: "{{ aws_network_propagation_delay | default(30) }}"
      when: network_status.phase == "Ready"

    - name: Final validation - check all required resources are available
      assert:
        that:
          - network_status.vpcId is defined
          - network_status.publicSubnets | length >= 2
          - network_status.privateSubnets | length >= 2
          - network_status.ready == true
        fail_msg: "Network resources are not properly configured"
        success_msg: "All network resources are available for cluster creation"

    - name: Set network facts for cluster creation
      set_fact:
        rosa_network_vpc_id: "{{ network_status.vpcId }}"
        rosa_network_public_subnets: "{{ network_status.publicSubnets }}"
        rosa_network_private_subnets: "{{ network_status.privateSubnets }}"
        rosa_network_ready: true

    - name: Display network readiness confirmation
      debug:
        msg:
          - "✓ ROSANetwork is ready for cluster creation"
          - "✓ VPC: {{ rosa_network_vpc_id }}"
          - "✓ Public subnets: {{ rosa_network_public_subnets | length }}"
          - "✓ Private subnets: {{ rosa_network_private_subnets | length }}"
          - "✓ Network automation completed successfully"

  rescue:
    - name: Handle network readiness timeout
      debug:
        msg: "ROSANetwork readiness check timed out or failed"

    - name: Get current ROSANetwork status for debugging
      kubernetes.core.k8s_info:
        api_version: infrastructure.cluster.x-k8s.io/v1beta2
        kind: ROSANetwork
        name: "{{ rosa_network_config_name | default(cluster_name + '-network') }}"
        namespace: "{{ capi_namespace }}"
      register: debug_network_status
      ignore_errors: true

    - name: Display current status for debugging
      debug:
        var: debug_network_status.resources[0].status
      when: debug_network_status.resources | length > 0

    - name: Get ROSANetwork events for troubleshooting
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Event
        namespace: "{{ capi_namespace }}"
        field_selectors:
          - involvedObject.name={{ rosa_network_config_name | default(cluster_name + '-network') }}
      register: network_events
      ignore_errors: true

    - name: Display events for troubleshooting
      debug:
        var: network_events.resources
      when: network_events.resources | length > 0

    - name: Provide troubleshooting guidance
      debug:
        msg:
          - "ROSANetwork Troubleshooting Steps:"
          - "1. Check CAPA controller logs:"
          - "   kubectl logs -n capa-system deployment/capa-controller-manager"
          - "2. Verify AWS credentials and permissions"
          - "3. Check CloudFormation stack status in AWS console"
          - "4. Verify network CRDs are properly installed"
          - "5. Check for AWS service limits or region issues"

    - name: Fail the task
      fail:
        msg: "ROSANetwork failed to become ready within timeout period"