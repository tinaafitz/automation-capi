- name: Get cluster-api deployment
  shell: |
    oc get deploy -n multicluster-engine -ojson |\
    jq -c '.items[] | select(.metadata.name | contains("capi-controller-manager")) | .metadata.name'
  register: capi_controller_manager

- name: Check for capi-controller-manager
  debug:
    msg: "The capi_controller_manager deployment was not found."
  when: not capi_controller_manager.stdout |  length > 0

- name: Check for cluster-api-provider-aws deployment
  shell: |
    oc get deploy -n multicluster-engine -ojson |\
    jq -c '.items[] | select(.metadata.name | contains("capa-controller-manager")) | .metadata.name'
  register: capa_controller_manager

- name: Check for capa-controller-manager
  debug:
    msg: "The capa_controller_manager deployment was not found."
  when: not capa_controller_manager.stdout |  length > 0

- name: Get registrationConfiguration
  shell: |
    oc get clusterManager -n multicluster-engine -ojson |\
    jq -c '.items[] | select(.spec.registrationConfiguration) | .spec.registrationConfiguration.featureGates[]'
  register: registration_configuration_applied

- name: Check for registration configuration
  debug:
    msg: "The registration_configuration was not found."
  when: not registration_configuration_applied.stdout |  length > 0

- name: Get clusterrolebinding
  shell: |
    oc get ClusterRoleBinding cluster-manager-registration-capi -ojson | jq -r '.metadata.name'
  register: cluster_role_binding_applied

- name: Check for cluster-role-binding
  debug:
    msg: "The cluster-role-binding changes have not been applied."
  when: not cluster_role_binding_applied.stdout |  length > 0

- name: Get capa-manager-bootstrap-credentials
  shell: |
    oc get secret -n multicluster-engine capa-manager-bootstrap-credentials -ojson | jq -r '.metadata.name'
  register: capa_manager_bootstrap_credentials_exists

- name: Check for capa-manager-bootstrap-credentials
  debug:
    msg: "The capa-manager-bootstrap-credentials secret does not exist. "
  when: not capa_manager_bootstrap_credentials_exists.stdout |  length > 0

- name: Get rosa-creds-secret
  shell: |
    oc get secret -n multicluster-engine rosa-creds-secret -ojson | jq -r '.metadata.name'
  register: rosa_creds_secret_exists

- name: Check for rosa-creds-secret
  debug:
    msg: "The rosa-creds-secret secret does not exist. "
  when: not rosa_creds_secret_exists.stdout |  length > 0

- name: Get AWSClusterControllerIdentity
  shell: |
    oc get AWSClusterControllerIdentity default -ojson | jq -r '.metadata.name'
  register: aws_cluster_controller_identity_exists

- name: Check for aws_cluster_controller_identity
  debug:
    msg: "The aws_cluster_controller_identity does not exist. "
  when: not aws_cluster_controller_identity_exists.stdout |  length > 0
